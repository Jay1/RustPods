name: Code Coverage

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - 'assets/**/*.png'
      - 'assets/**/*.jpg'
      - 'assets/**/*.svg'
  pull_request:
    branches: [ main ]
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - 'assets/**/*.png'
      - 'assets/**/*.jpg'
      - 'assets/**/*.svg'
  workflow_dispatch:  # Allow manual triggering

env:
  CARGO_TERM_COLOR: always

jobs:
  coverage:
    name: Test Coverage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable
      
      - name: Install cargo-tarpaulin
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-tarpaulin
      
      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
      
      - name: Generate coverage report
        run: |
          cargo tarpaulin --verbose --workspace --timeout 120 --out Xml --output-dir ./coverage
        env:
          RUSTFLAGS: "-C link-dead-code"
      
      - name: List coverage directory contents
        run: |
          ls -l ./coverage
          echo "Cobertura.xml size:"
          wc -l ./coverage/cobertura.xml
          echo "First 10 lines of cobertura.xml:"
          head -10 ./coverage/cobertura.xml
      
      - name: Set up Python (required for Codecov)
        uses: actions/setup-python@v4
      
      - name: Upload to codecov.io
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage/cobertura.xml
          fail_ci_if_error: false
          verbose: true
          name: rustpods-coverage
          flags: unittests
          token: ${{ secrets.CODECOV_TOKEN }}
      
      - name: Archive code coverage results
        uses: actions/upload-artifact@v3
        with:
          name: code-coverage-report
          path: ./coverage
          retention-days: 30
        continue-on-error: true 